name: Deploy Lambda Function as Zip

on:
  push:
    branches:
      - master

jobs:
  upload-s3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SVC_LAMBDA_STAGING_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SVC_LAMBDA_STAGING_USER_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # TODO: Replace this values with your deployment configuration
      - id: lambda
        name: Configure Lambda Bundle Metadata
        uses: CSUN-IT/lambda-bundler-action@v1
        with:
          # https://github.com/CSUN-IT/TerraformAWS/tree/master/<AWSAccountID>
          account-id: 111122223333
          # https://github.com/CSUN-IT/TerraformAWS/tree/master/111122223333/<Region>
          region-name: us-west-2
          # https://github.com/CSUN-IT/TerraformAWS/tree/master/111122223333/us-west-2/<FolderName>/
          deployment-name: <FolderName>
          # https://github.com/CSUN-IT/TerraformAWS/tree/master/111122223333/us-west-2/<FolderName>/<DeploymentFile>.tf
          file-name: <DeploymentFile>

      #
      # TODO: Use an `actions/setup-<lang>` action
      #

      # TODO: Build your ZIP file
      - name: Compile Production Build
        env:
          ZIP_FILE: ${{ steps.lambda.outputs.zip-file }}
          ZIP_FILE_S3: ${{ steps.lambda.outputs.zip-file-s3 }}
        run: |
          # Download dependencies...

          # Compile anything you need

          # Zip everything together using the filenames provided by the `CSUN-IT/lambda-bundler-action` step.
          # Be sure to include the `.bundle-version.txt` file in your ZIP for future troubleshooting purposes.
          zip -vr "$ZIP_FILE" .bundle-version.txt -x "*.DS_Store"

      - name: Upload Build to S3
        env:
          ZIP_FILE: ${{ steps.lambda.outputs.zip-file }}
          ZIP_FILE_S3: ${{ steps.lambda.outputs.zip-file-s3 }}
          OPEN_API_S3: ${{ steps.lambda.outputs.zip-file-s3-wo-ext }}.yml
        run: |
          aws s3 cp "$ZIP_FILE" "s3://csun-lambda-staging-bucket/$ZIP_FILE_S3"
